@model DT_PODSystem.Models.ViewModels.PODListViewModel

@{
    ViewData["Title"] = "Manage PODs";
    Layout = "_Layout";
}

@section Styles {
    <style>
        /* Enhanced Card View Styles */
        .pod-card {
            background: white;
            border: 1px solid #e3e6f0;
            border-radius: 1rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            transition: all 0.3s ease;
            position: relative;
            box-shadow: 0 0.15rem 1.75rem 0 rgba(58, 59, 69, 0.15);
        }

            .pod-card:hover {
                box-shadow: 0 0.5rem 2rem 0 rgba(58, 59, 69, 0.3);
                transform: translateY(-5px);
            }

        .pod-header {
            display: flex;
            justify-content: space-between;
            align-items: flex-start;
            margin-bottom: 1.25rem;
            min-height: 3rem;
        }

        .pod-title-section {
            flex: 1;
            padding-right: 3rem;
        }

        .pod-title {
            color: #2c3e50;
            font-weight: 700;
            font-size: 1.25rem;
            margin-bottom: 0.5rem;
            line-height: 1.3;
        }

        .pod-code {
            color: #6c757d;
            font-family: 'Monaco', 'Menlo', monospace;
            font-size: 0.8rem;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            color: white;
            padding: 0.25rem 0.75rem;
            border-radius: 1rem;
            display: inline-block;
        }

        .pod-description {
            color: #6c757d;
            font-size: 0.9rem;
            margin-bottom: 1.5rem;
            line-height: 1.5;
            display: -webkit-box;
            -webkit-line-clamp: 2;
            -webkit-box-orient: vertical;
            overflow: hidden;
        }

        .pod-meta {
            display: grid;
            grid-template-columns: 1fr 1fr;
            gap: 1rem;
            margin-bottom: 1.5rem;
            background: #f8f9fa;
            padding: 1rem;
            border-radius: 0.75rem;
            border-left: 4px solid #007bff;
        }

        .meta-item {
            display: flex;
            flex-direction: column;
        }

        .meta-label {
            font-size: 0.7rem;
            color: #6c757d;
            text-transform: uppercase;
            font-weight: 600;
            letter-spacing: 0.5px;
            margin-bottom: 0.25rem;
        }

        .meta-value {
            font-size: 0.9rem;
            color: #2c3e50;
            font-weight: 600;
        }

        .pod-badges {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            margin-bottom: 1.5rem;
        }

        .pod-footer {
            display: flex;
            justify-content: space-between;
            align-items: center;
            padding-top: 1rem;
            border-top: 2px solid #e9ecef;
            font-size: 0.85rem;
            color: #6c757d;
        }

        .footer-item {
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        /* Enhanced Cog Dropdown */
        .actions-dropdown {
            position: relative;
            flex-shrink: 0;
        }

        .cog-btn {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            border: none;
            color: white;
            font-size: 1rem;
            padding: 0.75rem;
            border-radius: 50%;
            transition: all 0.3s ease;
            box-shadow: 0 2px 10px rgba(102, 126, 234, 0.3);
            width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }

            .cog-btn:hover {
                transform: rotate(90deg);
                box-shadow: 0 4px 20px rgba(102, 126, 234, 0.5);
            }

        .dropdown-menu {
            border: none;
            border-radius: 1rem;
            box-shadow: 0 1rem 3rem rgba(0, 0, 0, 0.175);
            padding: 0.5rem 0;
            min-width: 180px;
        }

        .dropdown-item {
            padding: 0.75rem 1.25rem;
            font-size: 0.875rem;
            display: flex;
            align-items: center;
            gap: 0.75rem;
            border: none;
            transition: all 0.2s ease;
        }

            .dropdown-item:hover {
                background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
                color: white;
                transform: translateX(5px);
            }

            .dropdown-item i {
                width: 18px;
                text-align: center;
                font-size: 1rem;
            }

        /* Enhanced badges */
        .badge {
            padding: 0.5rem 1rem;
            font-size: 0.75rem;
            font-weight: 600;
            border-radius: 50px;
        }
    </style>
}

<!-- BEGIN breadcrumb -->
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
    <li class="breadcrumb-item active">POD Management</li>
</ol>
<!-- END breadcrumb -->
<!-- BEGIN page-header -->
<h1 class="page-header">POD Management <small>Process Owner Documents management and configuration</small></h1>
<!-- END page-header -->
<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-lg-3 col-md-6">
        <div class="widget widget-stats bg-gradient-blue">
            <div class="stats-icon stats-icon-lg"><i class="fa fa-folder"></i></div>
            <div class="stats-content">
                <div class="stats-title">Total PODs</div>
                <div class="stats-number" id="total-pods">@(Model.PODs?.Count() ?? 0)</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="widget widget-stats bg-gradient-green">
            <div class="stats-icon stats-icon-lg"><i class="fa fa-check-circle"></i></div>
            <div class="stats-content">
                <div class="stats-title">Active PODs</div>
                <div class="stats-number" id="active-pods">@(Model.PODs?.Count(p => p.Status == DT_PODSystem.Models.Enums.PODStatus.Active) ?? 0)</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="widget widget-stats bg-gradient-orange">
            <div class="stats-icon stats-icon-lg"><i class="fa fa-cog"></i></div>
            <div class="stats-content">
                <div class="stats-title">Automated</div>
                <div class="stats-number" id="automated-pods">@(Model.PODs?.Count(p => p.AutomationStatus == DT_PODSystem.Models.Enums.AutomationStatus.FullyAutomated) ?? 0)</div>
            </div>
        </div>
    </div>
    <div class="col-lg-3 col-md-6">
        <div class="widget widget-stats bg-gradient-purple">
            <div class="stats-icon stats-icon-lg"><i class="fa fa-file-pdf"></i></div>
            <div class="stats-content">
                <div class="stats-title">Templates</div>
                <div class="stats-number" id="total-templates">@(Model.PODs?.Sum(p => p.TemplateCount) ?? 0)</div>
            </div>
        </div>
    </div>
</div>


<!-- BEGIN panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <h4 class="panel-title">PODs (Process Owner Documents)</h4>
        <div class="panel-heading-btn">
            <a href="@Url.Action("Create")" class="btn btn-success btn-sm">
                <i class="fa fa-plus"></i> Create New POD
            </a>
        </div>
    </div>
    <div class="panel-body">
      
        <!-- PODs Card View (REPLACED TABLE) -->
        <div id="podsContainer" class="row">
            <!-- Cards will be loaded here via AJAX -->
        </div>
    </div>
</div>
<!-- END panel -->
@section Scripts {
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/bootstrap/js/bootstrap.bundle.min.js"></script>

    <script>
        $(document).ready(function() {
            loadPODsAsCards();
        });

        function loadPODsAsCards() {
            $.ajax({
                url: '@Url.Action("GetPodsData")',
                type: 'GET',
                dataType: 'json',
                success: function(response) {
                    if (response && response.data) {
                        displayPODsAsCards(response.data);
                    } else {
                        $('#podsContainer').html('<div class="col-12"><div class="alert alert-info">No PODs found.</div></div>');
                    }
                },
                error: function(xhr, status, error) {
                    console.error('Error loading PODs:', error);
                    $('#podsContainer').html('<div class="col-12"><div class="alert alert-danger">Error loading PODs. Please try again.</div></div>');
                }
            });
        }

        function displayPODsAsCards(pods) {
            let cardsHtml = '';

            pods.forEach(function(pod) {
                cardsHtml += `
                    <div class="col-lg-4 col-md-6 col-sm-12">
                        <div class="pod-card">
                            <!-- Card Header with Title and Actions -->
                            <div class="pod-header">
                                <div class="pod-title-section">
                                    <div class="pod-title">${pod.name}</div>
                                    <div class="pod-code">${pod.podCode || 'N/A'}</div>
                                </div>

                                <!-- Actions Dropdown -->
                                <div class="actions-dropdown">
                                    <div class="dropdown">
                                        <button class="cog-btn" type="button" data-bs-toggle="dropdown">
                                            <i class="fa fa-cog"></i>
                                        </button>
                                        <ul class="dropdown-menu dropdown-menu-end">
                                            <li><a class="dropdown-item" href="@Url.Action("Details")/${pod.id}">
                                                <i class="fa fa-eye text-info"></i> View Details
                                            </a></li>
                                            <li><a class="dropdown-item" href="@Url.Action("Edit")/${pod.id}">
                                                <i class="fa fa-edit text-primary"></i> Edit POD
                                            </a></li>
                                            <li><a class="dropdown-item" href="/Template/Wizard?podId=${pod.id}">
                                                <i class="fa fa-plus text-success"></i> Add Template
                                            </a></li>
                                            <li><hr class="dropdown-divider"></li>
                                            <li><a class="dropdown-item text-warning" href="javascript:void(0)" onclick="duplicatePOD(${pod.id})">
                                                <i class="fa fa-copy text-warning"></i> Duplicate
                                            </a></li>
                                            <li><a class="dropdown-item text-danger" href="javascript:void(0)" onclick="deletePOD(${pod.id}, '${pod.name.replace(/'/g, "\\'")}')">
                                                <i class="fa fa-trash text-danger"></i> Delete
                                            </a></li>
                                        </ul>
                                    </div>
                                </div>
                            </div>

                            ${pod.description ? `<div class="pod-description">${pod.description}</div>` : ''}

                            <div class="pod-meta">
                                <div class="meta-item">
                                    <div class="meta-label">Category</div>
                                    <div class="meta-value">${pod.category || 'N/A'}</div>
                                </div>
                                <div class="meta-item">
                                    <div class="meta-label">Department</div>
                                    <div class="meta-value">${pod.department || 'N/A'}</div>
                                </div>
                                <div class="meta-item">
                                    <div class="meta-label">Vendor</div>
                                    <div class="meta-value">${pod.vendor || 'N/A'}</div>
                                </div>
                                <div class="meta-item">
                                    <div class="meta-label">Frequency</div>
                                    <div class="meta-value">${pod.frequency || 'N/A'}</div>
                                </div>
                            </div>

                            <div class="pod-badges">
                                ${getStatusBadge(pod.status)}
                                ${getAutomationBadge(pod.automationStatus)}
                                ${pod.isFinancialData ? '<span class="badge bg-danger">Financial</span>' : ''}
                                ${pod.requiresApproval ? '<span class="badge bg-info">Approval Required</span>' : ''}
                            </div>

                            <div class="pod-footer">
                                <div class="footer-item">
                                    <i class="fa fa-calendar-alt text-primary"></i>
                                    <span><strong>Last Period:</strong> ${getLastProcessedPeriod(pod.lastProcessedDate)}</span>
                                </div>
                                <div class="footer-item">
                                    <i class="fa fa-clock text-success"></i>
                                    <span><strong>Processed:</strong> ${formatDate(pod.lastProcessedDate)}</span>
                                </div>
                            </div>
                        </div>
                    </div>
                `;
            });

            $('#podsContainer').html(cardsHtml);
        }

        // Badge helper functions (YOUR EXISTING FUNCTIONS)
        function getStatusBadge(status) {
            const statusMap = {
                'Draft': 'bg-secondary',
                'Active': 'bg-success',
                'Inactive': 'bg-warning',
                'Archived': 'bg-dark'
            };
            return `<span class="badge ${statusMap[status] || 'bg-secondary'}">${status}</span>`;
        }

        function getAutomationBadge(automationStatus) {
            const automationMap = {
                'PDF': 'bg-info',
                'SemiAutomated': 'bg-warning',
                'FullyAutomated': 'bg-success'
            };
            return `<span class="badge ${automationMap[automationStatus] || 'bg-secondary'}">${automationStatus}</span>`;
        }

        function getFrequencyBadge(frequency) {
            return `<span class="badge bg-outline-secondary">${frequency}</span>`;
        }

        function getPriorityBadge(priority) {
            const priorityMap = {
                1: 'bg-danger',
                2: 'bg-danger',
                3: 'bg-warning',
                4: 'bg-warning',
                5: 'bg-info',
                6: 'bg-info',
                7: 'bg-secondary',
                8: 'bg-secondary',
                9: 'bg-secondary',
                10: 'bg-secondary'
            };
            return `<span class="badge ${priorityMap[priority] || 'bg-secondary'} ms-1" title="Priority ${priority}/10">P${priority}</span>`;
        }

        function formatDate(dateString) {
            if (!dateString || dateString === 'Never') return 'Never';
            try {
                const date = new Date(dateString);
                return date.toLocaleDateString('en-GB', {
                    day: '2-digit',
                    month: 'short',
                    year: 'numeric'
                });
            } catch {
                return dateString;
            }
        }

        function getLastProcessedPeriod(dateString) {
            if (!dateString || dateString === 'Never') return 'No Period';
            try {
                const date = new Date(dateString);
                return date.toLocaleDateString('en-GB', {
                    month: 'long',
                    year: 'numeric'
                });
            } catch {
                return 'No Period';
            }
        }

        function duplicatePOD(podId) {
            alert('Duplicate functionality to be implemented');
        }

        // Delete POD function (YOUR EXISTING FUNCTION)
        function deletePOD(podId, podName) {
            if (confirm(`Are you sure you want to delete the POD "${podName}"?\n\nThis action cannot be undone.`)) {
                $.post('@Url.Action("Delete")', {
                    id: podId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        alert('POD deleted successfully.');
                        loadPODsAsCards(); // Reload cards instead of table
                    } else {
                        alert(response.message || 'Failed to delete POD.');
                    }
                })
                .fail(function() {
                    alert('An error occurred while deleting the POD.');
                });
            }
        }
    </script>

    @Html.AntiForgeryToken()
}
@model DT_PODSystem.Models.ViewModels.PODListViewModel

@{
    ViewData["Title"] = "Manage PODs";
    Layout = "_Layout";
}

@section Styles {
    <link href="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-bs5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet" />
}

<!-- BEGIN breadcrumb -->
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
    <li class="breadcrumb-item active">POD Management</li>
</ol>
<!-- END breadcrumb -->
<!-- BEGIN page-header -->
<h1 class="page-header">POD Management <small>Process Owner Documents management and configuration</small></h1>
<!-- END page-header -->
<!-- BEGIN panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <h4 class="panel-title">PODs (Process Owner Documents)</h4>
        <div class="panel-heading-btn">
            <a href="@Url.Action("Create")" class="btn btn-success btn-sm">
                <i class="fa fa-plus"></i> Create New POD
            </a>
        </div>
    </div>
    <div class="panel-body">
        <!-- Statistics Cards -->
        <div class="row mb-4">
            <div class="col-lg-3 col-md-6">
                <div class="widget widget-stats bg-gradient-blue">
                    <div class="stats-icon stats-icon-lg"><i class="fa fa-folder"></i></div>
                    <div class="stats-content">
                        <div class="stats-title">Total PODs</div>
                        <div class="stats-number" id="total-pods">@(Model.PODs?.Count() ?? 0)</div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="widget widget-stats bg-gradient-green">
                    <div class="stats-icon stats-icon-lg"><i class="fa fa-check-circle"></i></div>
                    <div class="stats-content">
                        <div class="stats-title">Active PODs</div>
                        <div class="stats-number" id="active-pods">@(Model.PODs?.Count(p => p.Status == DT_PODSystem.Models.Enums.PODStatus.Active) ?? 0)</div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="widget widget-stats bg-gradient-orange">
                    <div class="stats-icon stats-icon-lg"><i class="fa fa-cog"></i></div>
                    <div class="stats-content">
                        <div class="stats-title">Automated</div>
                        <div class="stats-number" id="automated-pods">@(Model.PODs?.Count(p => p.AutomationStatus == DT_PODSystem.Models.Enums.AutomationStatus.FullyAutomated) ?? 0)</div>
                    </div>
                </div>
            </div>
            <div class="col-lg-3 col-md-6">
                <div class="widget widget-stats bg-gradient-purple">
                    <div class="stats-icon stats-icon-lg"><i class="fa fa-file-pdf"></i></div>
                    <div class="stats-content">
                        <div class="stats-title">Templates</div>
                        <div class="stats-number" id="total-templates">@(Model.PODs?.Sum(p => p.TemplateCount) ?? 0)</div>
                    </div>
                </div>
            </div>
        </div>

        <!-- PODs DataTable -->
        <table id="podsTable" class="table table-striped table-bordered align-middle text-nowrap">
            <thead>
                <tr>
                    <th>POD Details</th>
                    <th>Organization</th>
                    <th>Processing</th>
                    <th>Status</th>
                    <th>Statistics</th>
                    <th width="150">Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be loaded via AJAX -->
            </tbody>
        </table>
    </div>
</div>
<!-- END panel -->
@section Scripts {
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net/js/dataTables.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js"></script>


    <script>
        let podsTable;

        $(document).ready(function() {
            // Wait for DataTables to be fully loaded
            if (typeof $.fn.DataTable === 'undefined') {
                console.error('DataTables not loaded');
                return;
            }

            initializeDataTable();
        });

        function initializeDataTable() {
            try {
                // Initialize DataTable
                podsTable = $('#podsTable').DataTable({
                    responsive: {
                        details: {
                            type: 'column',
                            target: 'tr'
                        }
                    },
                    processing: true,
                    ajax: {
                        url: '@Url.Action("GetPodsData")',
                        type: 'GET',
                        dataSrc: 'data'
                    },
                    columns: [
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                var statusBadge = getStatusBadge(row.status);
                                var priorityBadge = getPriorityBadge(row.processingPriority);

                                return `
                                    <div class="d-flex align-items-start">
                                        <div class="flex-grow-1">
                                            <div class="fw-bold text-primary mb-1">${row.name}</div>
                                            <div class="small text-muted mb-1">Code: <span class="badge bg-light text-dark">${row.podCode}</span></div>
                                            <div class="small text-muted">${row.description}</div>
                                            <div class="mt-1">${statusBadge} ${priorityBadge}</div>
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                return `
                                    <div class="small">
                                        <div class="mb-1">
                                            <i class="fa fa-layer-group text-primary me-1"></i>
                                            <strong>Category:</strong><br>
                                            ${row.category}
                                        </div>
                                        <div class="mb-1">
                                            <i class="fa fa-building text-success me-1"></i>
                                            <strong>Department:</strong><br>
                                            ${row.department}
                                        </div>
                                        <div>
                                            <i class="fa fa-handshake text-warning me-1"></i>
                                            <strong>Vendor:</strong><br>
                                            ${row.vendor}
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                var automationBadge = getAutomationBadge(row.automationStatus);
                                var frequencyBadge = getFrequencyBadge(row.frequency);
                                var approvalBadge = row.requiresApproval ? '<span class="badge bg-info">Approval Required</span>' : '';
                                var financialBadge = row.isFinancialData ? '<span class="badge bg-danger">Financial</span>' : '';

                                return `
                                    <div class="small">
                                        <div class="mb-1">${automationBadge}</div>
                                        <div class="mb-1">${frequencyBadge}</div>
                                        ${approvalBadge ? '<div class="mb-1">' + approvalBadge + '</div>' : ''}
                                        ${financialBadge ? '<div>' + financialBadge + '</div>' : ''}
                                    </div>
                                `;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                var statusBadge = getStatusBadge(row.status);
                                var lastProcessed = row.lastProcessedDate !== 'Never' ?
                                    `<div class="small text-muted"><i class="fa fa-clock me-1"></i>Last: ${row.lastProcessedDate}</div>` :
                                    `<div class="small text-warning"><i class="fa fa-exclamation-triangle me-1"></i>Never processed</div>`;

                                return `
                                    <div>
                                        ${statusBadge}
                                        <div class="small text-muted mt-1">
                                            <div><i class="fa fa-calendar me-1"></i>Created: ${row.createdDate}</div>
                                            <div><i class="fa fa-user me-1"></i>By: ${row.createdBy}</div>
                                        </div>
                                        ${lastProcessed}
                                    </div>
                                `;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                return `
                                    <div class="text-center">
                                        <div class="row g-0">
                                            <div class="col-6">
                                                <div class="small text-muted">Templates</div>
                                                <div class="fw-bold text-primary">${row.templateCount}</div>
                                            </div>
                                            <div class="col-6">
                                                <div class="small text-muted">Processed</div>
                                                <div class="fw-bold text-success">${row.processedCount}</div>
                                            </div>
                                        </div>
                                    </div>
                                `;
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                return `
                                    <div class="btn-group-vertical d-grid gap-1">
                                        <a href="@Url.Action("Details")/${row.id}" class="btn btn-info btn-sm">
                                            <i class="fa fa-eye"></i> Details
                                        </a>
                                        <a href="@Url.Action("Edit")/${row.id}" class="btn btn-warning btn-sm">
                                            <i class="fa fa-edit"></i> Edit
                                        </a>
                                        <button type="button" class="btn btn-danger btn-sm" onclick="deletePOD(${row.id}, '${row.name.replace(/'/g, "\\'")}')">
                                            <i class="fa fa-trash"></i> Delete
                                        </button>
                                    </div>
                                `;
                            }
                        }
                    ],
                    responsive: true,
                    pageLength: 25,
                    order: [[0, 'asc']],
                    language: {
                        emptyTable: "No PODs found",
                        zeroRecords: "No matching PODs found",
                        search: "Search PODs:"
                    }
                });

                // Auto-refresh every 30 seconds
                setInterval(function() {
                    podsTable.ajax.reload(null, false);
                }, 30000);

            } catch (error) {
                console.error('DataTable initialization error:', error);
                // Simple fallback without AJAX
                podsTable = $('#podsTable').DataTable({
                    pageLength: 25,
                    order: [[0, 'asc']],
                    columnDefs: [
                        { orderable: false, targets: [5] },
                        { searchable: false, targets: [5] }
                    ],
                    language: {
                        emptyTable: "Please refresh the page to load PODs"
                    }
                });
            }
        }

        // Badge helper functions
        function getStatusBadge(status) {
            const statusMap = {
                'Draft': 'bg-secondary',
                'Active': 'bg-success',
                'Inactive': 'bg-warning',
                'Archived': 'bg-dark'
            };
            return `<span class="badge ${statusMap[status] || 'bg-secondary'}">${status}</span>`;
        }

        function getAutomationBadge(automationStatus) {
            const automationMap = {
                'PDF': 'bg-info',
                'SemiAutomated': 'bg-warning',
                'FullyAutomated': 'bg-success'
            };
            return `<span class="badge ${automationMap[automationStatus] || 'bg-secondary'}">${automationStatus}</span>`;
        }

        function getFrequencyBadge(frequency) {
            return `<span class="badge bg-outline-secondary">${frequency}</span>`;
        }

        function getPriorityBadge(priority) {
            const priorityMap = {
                1: 'bg-danger',
                2: 'bg-danger',
                3: 'bg-warning',
                4: 'bg-warning',
                5: 'bg-info',
                6: 'bg-info',
                7: 'bg-secondary',
                8: 'bg-secondary',
                9: 'bg-secondary',
                10: 'bg-secondary'
            };
            return `<span class="badge ${priorityMap[priority] || 'bg-secondary'} ms-1" title="Priority ${priority}/10">P${priority}</span>`;
        }

        // Delete POD function
        function deletePOD(podId, podName) {
            if (confirm(`Are you sure you want to delete the POD "${podName}"?\n\nThis action cannot be undone.`)) {
                $.post('@Url.Action("Delete")', {
                    id: podId,
                    __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                })
                .done(function(response) {
                    if (response.success) {
                        alert('POD deleted successfully.');
                        if (podsTable) {
                            podsTable.ajax.reload();
                        }
                    } else {
                        alert(response.message || 'Failed to delete POD.');
                    }
                })
                .fail(function() {
                    alert('An error occurred while deleting the POD.');
                });
            }
        }
    </script>

    @Html.AntiForgeryToken()
}
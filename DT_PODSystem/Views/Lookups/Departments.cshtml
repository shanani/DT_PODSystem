@model DT_PODSystem.Models.ViewModels.LookupsViewModel

@{
    ViewData["Title"] = "Manage Departments";
    Layout = "_Layout";
}

@section Styles {
    <link href="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-bs5/css/dataTables.bootstrap5.min.css" rel="stylesheet" />
    <link href="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive-bs5/css/responsive.bootstrap5.min.css" rel="stylesheet" />
}

<!-- BEGIN breadcrumb -->
<ol class="breadcrumb">
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Dashboard</a></li>
    <li class="breadcrumb-item"><a href="@Url.Action("Index", "Home")">Lookups</a></li>
    <li class="breadcrumb-item active">Departments</li>
</ol>
<!-- END breadcrumb -->
<!-- BEGIN page-header -->
<h1 class="page-header">Manage Departments <small>Organizational departments and general directorates</small></h1>
<!-- END page-header -->
<!-- BEGIN panel -->
<div class="panel panel-inverse">
    <div class="panel-heading">
        <h4 class="panel-title">Departments</h4>
        <div class="panel-heading-btn">
            <button type="button" class="btn btn-info btn-sm me-2" onclick="showCreateGDModal()">
                <i class="fa fa-building"></i> Add General Directorate
            </button>
            <button type="button" class="btn btn-success btn-sm" onclick="showCreateModal()">
                <i class="fa fa-plus"></i> Add Department
            </button>
        </div>
    </div>
    <div class="panel-body">
        <table id="departmentsTable" class="table table-striped table-bordered align-middle text-nowrap">
            <thead>
                <tr>
                    <th>Department</th>
                    <th>General Directorate</th>
                    <th>Order</th>
                    <th>Status</th>
                    <th width="200">Actions</th>
                </tr>
            </thead>
            <tbody>
                <!-- Data will be loaded via AJAX -->
            </tbody>
        </table>
    </div>
</div>
<!-- END panel -->
<!-- Department Modal -->
<div class="modal fade" id="departmentModal" tabindex="-1">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="departmentModalTitle">Add Department</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="departmentForm">
                <div class="modal-body">
                    <input type="hidden" id="departmentId" value="0" />

                    <!-- Basic Information -->
                    <div class="row mb-3">
                        <div class="col-md-8">
                            <label for="departmentName" class="form-label">Department Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="departmentName" maxlength="200" required />
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-4">
                            <label for="departmentDisplayOrder" class="form-label">Display Order</label>
                            <input type="number" class="form-control" id="departmentDisplayOrder" min="1" max="999" value="1" />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="departmentGeneralDirectorateId" class="form-label">General Directorate <span class="text-danger">*</span></label>
                        <select class="form-select" id="departmentGeneralDirectorateId" required>
                            <option value="">Select General Directorate</option>
                            @foreach (var gd in Model.GeneralDirectorates)
                            {
                                <option value="@gd.Id">@gd.Name</option>
                            }
                        </select>
                        <div class="invalid-feedback"></div>
                    </div>

                    <div class="mb-3">
                        <label for="departmentDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="departmentDescription" rows="3" maxlength="500"></textarea>
                        <div class="form-text">Optional description for the department</div>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-success" id="saveDepartmentBtn">
                        <i class="fa fa-save"></i> Save Department
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- General Directorate Modal -->
<div class="modal fade" id="gdModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="gdModalTitle">Add General Directorate</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="gdForm">
                <div class="modal-body">
                    <input type="hidden" id="gdId" value="0" />

                    <div class="row mb-3">
                        <div class="col-md-8">
                            <label for="gdName" class="form-label">Name <span class="text-danger">*</span></label>
                            <input type="text" class="form-control" id="gdName" maxlength="200" required />
                            <div class="invalid-feedback"></div>
                        </div>
                        <div class="col-md-4">
                            <label for="gdDisplayOrder" class="form-label">Display Order</label>
                            <input type="number" class="form-control" id="gdDisplayOrder" min="1" max="999" value="1" />
                        </div>
                    </div>

                    <div class="mb-3">
                        <label for="gdDescription" class="form-label">Description</label>
                        <textarea class="form-control" id="gdDescription" rows="3" maxlength="500"></textarea>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                    <button type="submit" class="btn btn-info" id="saveGDBtn">
                        <i class="fa fa-save"></i> Save General Directorate
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<!-- Usage Details Modal -->
<div class="modal fade" id="usageModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Usage Details</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body" id="usageModalBody">
                <div class="text-center">
                    <i class="fa fa-spinner fa-spin fa-2x"></i>
                    <p class="mt-2">Loading usage details...</p>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net/js/dataTables.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-bs5/js/dataTables.bootstrap5.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive/js/dataTables.responsive.min.js"></script>
    <script src="https://ops_cdn.stc.com.sa/ca/plugins/datatables.net-responsive-bs5/js/responsive.bootstrap5.min.js"></script>

    <script>
        let departmentsTable;

        $(document).ready(function() {
            if (typeof $.fn.DataTable === 'undefined') {
                console.error('DataTables not loaded');
                return;
            }

            initializeDataTable();
            setupFormValidation();
            setupEventHandlers();
        });

        function initializeDataTable() {
            try {
                departmentsTable = $('#departmentsTable').DataTable({
                    responsive: {
                        details: {
                            type: 'column',
                            target: 'tr'
                        }
                    },
                    processing: true,
                    ajax: {
                        url: '/Lookups/GetDepartmentsData',
                        type: 'GET',
                        dataSrc: 'data'
                    },
                    columns: [
                        {
                            data: 'name',
                            render: function(data) {
                                return `<strong>${data}</strong>`;
                            }
                        },
                        {
                            data: 'generalDirectorateName',
                            render: function(data) {
                                return `<span class="badge bg-primary">${data}</span>`;
                            }
                        },
                        {
                            data: 'displayOrder'
                        },
                        {
                            data: 'isActive',
                            render: function(data) {
                                return data ?
                                    '<span class="badge bg-success">Active</span>' :
                                    '<span class="badge bg-secondary">Inactive</span>';
                            }
                        },
                        {
                            data: null,
                            orderable: false,
                            render: function(data, type, row) {
                                return `
                                    <div class="btn-group">
                                        <button type="button" class="btn btn-sm btn-outline-primary" onclick="showEditModal(${row.id})">
                                            <i class="fa fa-edit"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-info" onclick="showUsageDetails('department', ${row.id})">
                                            <i class="fa fa-info-circle"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-warning" onclick="toggleStatus('department', ${row.id})">
                                            <i class="fa fa-toggle-on"></i>
                                        </button>
                                        <button type="button" class="btn btn-sm btn-outline-danger" onclick="deleteEntity('department', ${row.id}, '${row.name}')">
                                            <i class="fa fa-trash"></i>
                                        </button>
                                    </div>
                                `;
                            }
                        }
                    ],
                    pageLength: 25,
                    order: [[1, 'asc'], [2, 'asc'], [0, 'asc']], // GD, Order, Name
                    language: {
                        search: "Search departments:",
                        lengthMenu: "Show _MENU_ departments per page",
                        info: "Showing _START_ to _END_ of _TOTAL_ departments",
                        infoEmpty: "No departments found",
                        emptyTable: "No departments available"
                    }
                });
            } catch (error) {
                console.error('DataTable initialization error:', error);
                // Simple fallback without AJAX
                departmentsTable = $('#departmentsTable').DataTable({
                    pageLength: 25,
                    order: [[1, 'asc'], [2, 'asc'], [0, 'asc']],
                    columnDefs: [
                        { orderable: false, targets: [4] },
                        { searchable: false, targets: [4] }
                    ],
                    language: {
                        emptyTable: "Please refresh the page to load departments"
                    }
                });
            }
        }

        function setupFormValidation() {
            // Department form
            $('#departmentForm').on('submit', function(e) {
                e.preventDefault();
                if (validateDepartmentForm()) {
                    saveDepartment();
                }
            });

            // GD form
            $('#gdForm').on('submit', function(e) {
                e.preventDefault();
                if (validateGDForm()) {
                    saveGeneralDirectorate();
                }
            });

            // Real-time validation
            $('#departmentName').on('blur', function() {
                validateDepartmentField('departmentName', 'name');
            });

            $('#gdName').on('blur', function() {
                validateGDField('gdName', 'name');
            });
        }

        function setupEventHandlers() {
            // Modal events
            $('#departmentModal').on('hidden.bs.modal', function() {
                resetDepartmentForm();
            });

            $('#gdModal').on('hidden.bs.modal', function() {
                resetGDForm();
            });
        }

        // Department Functions
        function showCreateModal() {
            resetDepartmentForm();
            $('#departmentModalTitle').text('Add Department');
            $('#saveDepartmentBtn').html('<i class="fa fa-save"></i> Save Department');
            $('#departmentModal').modal('show');
            setTimeout(() => $('#departmentName').focus(), 500);
        }

        function showEditModal(id) {
            resetDepartmentForm();
            $('#departmentModalTitle').text('Edit Department');
            $('#saveDepartmentBtn').html('<i class="fa fa-save"></i> Update Department');

            $.get(`/Lookups/GetDepartment/${id}`)
                .done(function(response) {
                    if (response.success) {
                        const dept = response.data;
                        $('#departmentId').val(dept.id);
                        $('#departmentName').val(dept.name);
                        $('#departmentGeneralDirectorateId').val(dept.generalDirectorateId);
                        $('#departmentDescription').val(dept.description || '');
                        $('#departmentDisplayOrder').val(dept.displayOrder);
                        $('#departmentModal').modal('show');
                        setTimeout(() => $('#departmentName').focus(), 500);
                    } else {
                        alert.error('Failed to load department');
                    }
                })
                .fail(function() {
                    alert.error('Failed to load department data');
                });
        }

                function saveDepartment() {
            // Create form data as regular object
            const departmentData = {
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val(),
                id: parseInt($('#departmentId').val()) || 0,
                name: $('#departmentName').val().trim(),
                generalDirectorateId: parseInt($('#departmentGeneralDirectorateId').val()) || 0,
                description: $('#departmentDescription').val().trim(),
                displayOrder: parseInt($('#departmentDisplayOrder').val()) || 1
            };

            const isEdit = departmentData.id > 0;
            const url = isEdit ? '/Lookups/UpdateDepartment' : '/Lookups/CreateDepartment';

            $('#saveDepartmentBtn').prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Saving...');

            $.ajax({
                url: url,
                type: 'POST',
                data: departmentData, // Send as regular form data, not FormData object
                dataType: 'json'
            })
            .done(function(response) {
                if (response.success) {
                    alert.success(response.message);
                    $('#departmentModal').modal('hide');
                    departmentsTable.ajax.reload(null, false);
                } else {
                    alert.error(response.message);
                }
            })
            .fail(function(xhr) {
                console.error('Department save failed:', xhr);
                let errorMessage = 'Failed to save department';
                if (xhr.status === 400) {
                    try {
                        const errorResponse = JSON.parse(xhr.responseText);
                        errorMessage = errorResponse.message || errorMessage;
                    } catch (e) {
                        errorMessage = 'Validation error occurred';
                    }
                } else if (xhr.status === 415) {
                    errorMessage = 'Server configuration error - please contact support';
                }
                alert.error(errorMessage);
            })
            .always(function() {
                $('#saveDepartmentBtn').prop('disabled', false).html('<i class="fa fa-save"></i> Save Department');
            });
        }

        // General Directorate Functions
        function showCreateGDModal() {
            resetGDForm();
            $('#gdModalTitle').text('Add General Directorate');
            $('#saveGDBtn').html('<i class="fa fa-save"></i> Save General Directorate');
            $('#gdModal').modal('show');
            setTimeout(() => $('#gdName').focus(), 500);
        }

        function saveGeneralDirectorate() {
            const formData = new FormData();
            formData.append('__RequestVerificationToken', $('input[name="__RequestVerificationToken"]').val());
            formData.append('id', parseInt($('#gdId').val()) || 0);
            formData.append('name', $('#gdName').val().trim());
            formData.append('description', $('#gdDescription').val().trim());
            formData.append('displayOrder', parseInt($('#gdDisplayOrder').val()) || 1);

            const isEdit = parseInt($('#gdId').val()) > 0;
            const url = isEdit ? '/Lookups/UpdateGeneralDirectorate' : '/Lookups/CreateGeneralDirectorate';

            $('#saveGDBtn').prop('disabled', true).html('<i class="fa fa-spinner fa-spin"></i> Saving...');

            $.ajax({
                url: url,
                type: 'POST',
                data: formData,
                processData: false,
                contentType: false,
                dataType: 'json'
            })
            .done(function(response) {
                if (response.success) {
                    alert.success(response.message);
                    $('#gdModal').modal('hide');

                    // Add new GD to dropdown
                    if (!isEdit && response.data) {
                        const option = `<option value="${response.data.id}">${response.data.name}</option>`;
                        $('#departmentGeneralDirectorateId').append(option);
                    }

                    departmentsTable.ajax.reload(null, false);
                } else {
                    alert.error(response.message);
                }
            })
            .fail(function(xhr) {
                console.error('GD save failed:', xhr);
                alert.error('Failed to save general directorate');
            })
            .always(function() {
                $('#saveGDBtn').prop('disabled', false).html('<i class="fa fa-save"></i> Save General Directorate');
            });
        }

        // Common Functions
        function deleteEntity(entityType, id, name) {
            const entityDisplayName = entityType === 'department' ? 'Department' : 'General Directorate';
            const deleteUrl = entityType === 'department' ? '/Lookups/DeleteDepartment' : '/Lookups/DeleteGeneralDirectorate';

            swal({
                title: `Delete ${entityDisplayName}?`,
                text: `Are you sure you want to delete "${name}"? This action cannot be undone.`,
                type: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#3085d6',
                confirmButtonText: 'Delete',
                cancelButtonText: 'Cancel',
                closeOnEsc: true
            }).then((result) => {
                if (result.value) {
                    $.post(deleteUrl, {
                        id: id,
                        __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
                    })
                    .done(function(response) {
                        if (response.success) {
                            alert.success(response.message);
                            departmentsTable.ajax.reload(null, false);
                        } else {
                            alert.error(response.message);
                        }
                    })
                    .fail(function() {
                        alert.error(`Failed to delete ${entityDisplayName.toLowerCase()}`);
                    });
                }
            });
        }

        function toggleStatus(entityType, id) {
            $.post('/Lookups/ToggleStatus', {
                entityType: entityType,
                id: id,
                __RequestVerificationToken: $('input[name="__RequestVerificationToken"]').val()
            })
            .done(function(response) {
                if (response.success) {
                    alert.success(response.message);
                    departmentsTable.ajax.reload(null, false);
                } else {
                    alert.error(response.message);
                }
            })
            .fail(function() {
                alert.error('Failed to update status');
            });
        }

        function showUsageDetails(entityType, id) {
            $('#usageModal').modal('show');

            $.get(`/Lookups/GetUsageDetails?entityType=${entityType}&id=${id}`)
                .done(function(response) {
                    if (response.success) {
                        const usage = response.data;
                        let html = `
                            <div class="row">
                                <div class="col-md-6">
                                    <h6><strong>${usage.lookupName}</strong></h6>
                                    <p class="text-muted">${entityType.charAt(0).toUpperCase() + entityType.slice(1)}</p>
                                </div>
                                <div class="col-md-6 text-end">
                                    <span class="badge ${usage.isInUse ? 'bg-warning' : 'bg-success'} fs-6">
                                        ${usage.isInUse ? 'In Use' : 'Not Used'}
                                    </span>
                                </div>
                            </div>
                            <hr />
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="text-center">
                                        <h4 class="text-primary">${usage.totalUsageCount}</h4>
                                        <small class="text-muted">Total Usage</small>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    <div class="text-center">
                                        <h4 class="${usage.canBeDeleted ? 'text-success' : 'text-danger'}">
                                            ${usage.canBeDeleted ? 'Yes' : 'No'}
                                        </h4>
                                        <small class="text-muted">Can Delete</small>
                                    </div>
                                </div>
                            </div>`;

                        if (usage.dependencies.length > 0) {
                            html += `
                                <hr />
                                <h6>Dependencies:</h6>
                                <ul class="list-unstyled">`;
                            usage.dependencies.forEach(dep => {
                                html += `<li><i class="fa fa-arrow-right text-muted me-2"></i>${dep}</li>`;
                            });
                            html += `</ul>`;
                        }

                        $('#usageModalBody').html(html);
                    } else {
                        $('#usageModalBody').html('<div class="alert alert-danger">Failed to load usage details</div>');
                    }
                })
                .fail(function() {
                    $('#usageModalBody').html('<div class="alert alert-danger">Error loading usage details</div>');
                });
        }

        // Validation Functions
        function validateDepartmentForm() {
            let isValid = true;
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').text('');

            if (!$('#departmentName').val().trim()) {
                markFieldInvalid('departmentName', 'Department name is required');
                isValid = false;
            }

            if (!$('#departmentGeneralDirectorateId').val()) {
                markFieldInvalid('departmentGeneralDirectorateId', 'General Directorate is required');
                isValid = false;
            }

            return isValid;
        }

        function validateGDForm() {
            let isValid = true;
            $('.is-invalid').removeClass('is-invalid');
            $('.invalid-feedback').text('');

            if (!$('#gdName').val().trim()) {
                markFieldInvalid('gdName', 'General Directorate name is required');
                isValid = false;
            }

            return isValid;
        }

        function validateDepartmentField(fieldId, fieldType) {
            const value = $(`#${fieldId}`).val().trim();
            const entityId = $('#departmentId').val();

            if (value) {
                $.get(`/Lookups/ValidateName?entityType=department&name=${encodeURIComponent(value)}&excludeId=${entityId}`)
                    .done(function(isUnique) {
                        if (!isUnique) {
                            markFieldInvalid(fieldId, `This ${fieldType} is already in use`);
                        } else {
                            markFieldValid(fieldId);
                        }
                    });
            }
        }

        function validateGDField(fieldId, fieldType) {
            const value = $(`#${fieldId}`).val().trim();
            const entityId = $('#gdId').val();

            if (value) {
                $.get(`/Lookups/ValidateName?entityType=generaldirectorate&name=${encodeURIComponent(value)}&excludeId=${entityId}`)
                    .done(function(isUnique) {
                        if (!isUnique) {
                            markFieldInvalid(fieldId, `This ${fieldType} is already in use`);
                        } else {
                            markFieldValid(fieldId);
                        }
                    });
            }
        }

        function markFieldInvalid(fieldId, message) {
            $(`#${fieldId}`).addClass('is-invalid');
            $(`#${fieldId}`).siblings('.invalid-feedback').text(message);
        }

        function markFieldValid(fieldId) {
            $(`#${fieldId}`).removeClass('is-invalid').addClass('is-valid');
            $(`#${fieldId}`).siblings('.invalid-feedback').text('');
        }

        function resetDepartmentForm() {
            $('#departmentForm')[0].reset();
            $('#departmentId').val('0');
            $('.is-invalid, .is-valid').removeClass('is-invalid is-valid');
            $('.invalid-feedback').text('');
            $('#departmentDisplayOrder').val('1');
        }

        function resetGDForm() {
            $('#gdForm')[0].reset();
            $('#gdId').val('0');
            $('.is-invalid, .is-valid').removeClass('is-invalid is-valid');
            $('.invalid-feedback').text('');
            $('#gdDisplayOrder').val('1');
        }
    </script>
}

@section ValidationScripts {
    @Html.AntiForgeryToken()
}
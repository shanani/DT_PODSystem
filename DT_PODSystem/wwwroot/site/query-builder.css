/**Query Builder & Formula Canvas - Clean CSS with Auto-Resizable Nodes */

/* ====================================== */
/* DRAGGABLE ITEMS (Constants, Variables, Outputs) */
/* ====================================== */

/* Container for draggable items */
.variable-list {
    padding: 4px 0;
    max-height: 1000px;
    overflow-y: auto;
}

/* Draggable items styling */
.constant-item[draggable="true"],
.variable-item[draggable="true"] {
    cursor: grab;
    transition: all 0.2s ease;
    position: relative;
    margin: 4px 0 8px 0;
    padding: 0.75rem;
    border: 1px solid #dee2e6;
    border-radius: 0.375rem;
    background: white;
}

    .constant-item[draggable="true"]:hover,
    .variable-item[draggable="true"]:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 12px rgba(0,0,0,0.15);
        z-index: 10;
    }

    .constant-item[draggable="true"]:active,
    .variable-item[draggable="true"]:active {
        cursor: grabbing;
    }

    /* Drag handle indicator */
    .constant-item[draggable="true"]::before,
    .variable-item[draggable="true"]::before {
        content: "⋮⋮";
        position: absolute;
        left: 4px;
        top: 50%;
        transform: translateY(-50%);
        color: #dee2e6;
        font-size: 12px;
        line-height: 1;
        letter-spacing: -2px;
        opacity: 0;
        transition: opacity 0.2s ease;
    }

    .constant-item[draggable="true"]:hover::before,
    .variable-item[draggable="true"]:hover::before {
        opacity: 1;
    }

/* Drag feedback */
.constant-item.dragging,
.variable-item.dragging {
    opacity: 0.5;
    transform: rotate(3deg) scale(0.9);
}

/* Output item states */
.output-item.active-output {
    border-color: #A54EE1 !important;
    box-shadow: 0 0 0 2px rgba(165, 78, 225, 0.2) !important;
}

.output-item.newly-created {
    animation: highlight-pulse 2s ease-in-out;
}

@keyframes highlight-pulse {
    0%, 100% {
        background-color: transparent;
    }

    50% {
        background-color: rgba(165, 78, 225, 0.1);
    }
}

/* ====================================== */
/* FORMULA CANVAS */
/* ====================================== */

.drawflow-delete {
    line-height: 1.2em !important;
    font-size: 1.2em !important;
}

#formula-canvas {
    width: 100% !important;
    height: 500px !important;
    position: relative !important;
    border: 1px solid #dee2e6 !important;
    border-radius: 8px !important;
    overflow: hidden !important;
    background: #f8f9fa !important;
    background-image: linear-gradient(to right, #f1f3f4 1px, transparent 1px), linear-gradient(to bottom, #f1f3f4 1px, transparent 1px) !important;
    background-size: 20px 20px !important;
    background-position: 0 0 !important;
    background-repeat: repeat !important;
    background-attachment: local !important;
}

    #formula-canvas .drawflow {
        background: transparent !important;
        position: relative !important;
    }

    #formula-canvas.building-formula {
        border: 2px dashed #A54EE1;
        border-radius: 8px;
    }

    #formula-canvas.no-outputs {
        opacity: 0.6;
        pointer-events: none;
    }

/* ====================================== */
/* DRAWFLOW NODES - AUTO-RESIZABLE VERSION */
/* ====================================== */

.drawflow .drawflow-node {
    padding: 0 !important;
    opacity: .8;
    font-family: 'STC Forward', sans-serif !important;
    font-weight: 500;
    font-size: 1.1rem;
    color: white !important;
    text-shadow: 0 1px 2px rgba(0,0,0,0.3) !important;
    box-shadow: 0 4px 8px rgba(0,0,0,0.2) !important;
    text-align: center !important;
    /* ✅ AUTO-RESIZE: Let content determine size */
    width: auto !important;
    height: auto !important;
    min-width: var(--node-min-width, 130px) !important;
    min-height: var(--node-min-height, 70px) !important;
    max-width: var(--node-max-width, 300px) !important;
    /* ✅ FLEXIBLE CONTENT LAYOUT */
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    /* ✅ DEFAULT PADDING - WILL BE OVERRIDDEN BY SPECIFIC NODES */
    padding: 10px 15px !important;
    box-sizing: border-box !important;
}

    /* Variable nodes - HIGHEST SPECIFICITY */
    #formula-canvas .drawflow .drawflow-node.variable-node,
    .drawflow .drawflow-node.variable-node {
        --node-min-width: 200px;
        --node-min-height: 70px;
        /* ✅ DYNAMIC MAX-WIDTH BASED ON CONTENT */
        max-width: fit-content !important;
        width: fit-content !important;
        min-width: 200px !important;
        border-radius: 3px calc(var(--node-min-height, 70px) / 2) calc(var(--node-min-height, 70px) / 2) 3px !important;
        background: #007bff !important;
        border: none !important;
        font-size: 0.95rem !important;
        /* ✅ FORCE SPECIFIC PADDING */
        padding: 12px 25px 12px 25px !important;
    }

    /* Constant nodes - HIGHEST SPECIFICITY */
    #formula-canvas .drawflow .drawflow-node.constant-node,
    .drawflow .drawflow-node.constant-node {
        --node-min-width: 130px;
        --node-min-height: 70px;
        /* ✅ DYNAMIC MAX-WIDTH BASED ON CONTENT */
        max-width: fit-content !important;
        width: fit-content !important;
        min-width: 130px !important;
        border-radius: 15px !important;
        background: linear-gradient(135deg, #28a745, #20c997) !important;
        border: none !important;
        /* ✅ SPECIAL LAYOUT FOR CONSTANTS (label + value) */
        flex-direction: column !important;
        /* ✅ FORCE SPECIFIC PADDING */
        padding: 10px 30px 10px 30px !important;
    }

        .drawflow .drawflow-node.constant-node label {
            font-size: 0.8rem;
            margin: 0;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
        }

        .drawflow .drawflow-node.constant-node p {
            padding: 0;
            margin: 2px 0 0 0;
            font-size: 1.4rem;
            white-space: nowrap;
            overflow: hidden;
            text-overflow: ellipsis;
            max-width: 100%;
        }

    /* Output nodes - HIGHEST SPECIFICITY */
    #formula-canvas .drawflow .drawflow-node.output-node,
    .drawflow .drawflow-node.output-node {
        --node-min-width: 200px;
        --node-min-height: 70px;
        /* ✅ DYNAMIC MAX-WIDTH BASED ON CONTENT */
        max-width: fit-content !important;
        width: fit-content !important;
        min-width: 200px !important;
        border-radius: 3px calc(var(--node-min-height, 70px) / 2) calc(var(--node-min-height, 70px) / 2) 3px !important;
        background: #A54EE1 !important;
        border: none !important;
        font-size: 0.95rem !important;
        /* ✅ FORCE SPECIFIC PADDING */
        padding: 12px 35px 12px 35px !important;
    }

    /* Operation nodes - Diamond shape - KEEP FIXED SIZE */
    .drawflow .drawflow-node.operation-node {
        width: 60px !important;
        height: 60px !important;
        min-width: 60px !important;
        min-height: 60px !important;
        max-width: 60px !important;
        transform: rotate(45deg) !important;
        border-radius: 8px !important;
        padding: 0 !important;
    }

/* ✅ CONTENT WRAPPER FOR AUTO-SIZING */
.drawflow .drawflow_content_node {
    width: 100% !important;
    height: 100% !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    /* ✅ ALLOW TEXT TO DETERMINE WIDTH - NO MORE CUTTING OFF */
    white-space: nowrap !important;
    overflow: visible !important;
    text-overflow: clip !important;
    /* ✅ RESPONSIVE TEXT SIZING */
    font-size: clamp(0.9rem, 2vw, 1.2rem) !important;
    line-height: 1.2 !important;
    /* ✅ PADDING INCLUDED IN WIDTH CALCULATION */
    padding: 0 5px !important;
    box-sizing: border-box !important;
    /* ✅ ENSURE CONTENT DETERMINES SIZE INCLUDING PADDING */
    width: max-content !important;
}


/* Keep text content straight inside rotated diamond */
.drawflow .operation-node .drawflow_content_node {
    font-size: 3rem !important;
    transform: rotate(-45deg) !important;
    white-space: normal !important;
    /* ✅ RESET PADDING FOR OPERATION NODES */
    padding: 0 !important;
}

/* Selected node state */
.drawflow .drawflow-node.selected {
    border: 3px solid #A54EE1 !important;
    box-shadow: 0 4px 8px rgba(0,0,0,0.6), 0 0 0 5px rgba(165, 78, 225, 0.3) !important;
    opacity: 1 !important;
    z-index: 1000 !important;
}

/* ====================================== */
/* ENHANCED PORT POSITIONING - PORTS OUTSIDE NODE FRAMES */
/* ====================================== */

/* ✅ PORT POSITIONING: Ensure ports stay correctly positioned */
.drawflow .drawflow-node .input,
.drawflow .drawflow-node .output {
    position: absolute !important;
    width: var(--port-size, 20px) !important;
    height: var(--port-size, 20px) !important;
    border-radius: 50% !important;
    border: 2px solid #ffffff !important;
    z-index: 1000 !important;
}

/* ✅ INPUT PORTS: Completely outside touching border on left */
.drawflow .drawflow-node .input {
    left: -20px !important; /* Full port width outside, touching border */
    top: 50% !important;
    transform: translateY(-50%) !important;
    background: #ff6b6b !important;
}

/* ✅ OUTPUT PORTS: Completely outside touching border on right */
.drawflow .drawflow-node .output {
    right: -20px !important; /* Full port width outside, touching border */
    top: 50% !important;
    transform: translateY(-50%) !important;
    background: #4ecdc4 !important;
}

/* ✅ OPERATION NODES - PORTS COMPLETELY OUTSIDE */
.drawflow .operation-node .input,
.drawflow .operation-node .output {
    --port-size: 18px; /* Slightly smaller for operation nodes */
}

/* ✅ OPERATION NODES INPUT PORTS - COMPLETELY OUTSIDE */
.drawflow .operation-node .input {
    left: -18px !important; /* Full port width outside, touching border */
}

/* ✅ OPERATION NODES OUTPUT PORTS - COMPLETELY OUTSIDE */
.drawflow .operation-node .output {
    right: -18px !important; /* Full port width outside, touching border */
}

/* ✅ MULTIPLE PORTS: Center alignment logic with more spacing */
/* Single port - always centered */
.drawflow .drawflow-node .input:nth-child(1):last-child,
.drawflow .drawflow-node .output:nth-child(1):last-child {
    top: 50% !important;
}

/* Two ports - more space around center */
.drawflow .drawflow-node .input:nth-child(1):nth-last-child(2) {
    top: 30% !important;
}

.drawflow .drawflow-node .input:nth-child(2):nth-last-child(1) {
    top: 70% !important;
}

.drawflow .drawflow-node .output:nth-child(1):nth-last-child(2) {
    top: 30% !important;
}

.drawflow .drawflow-node .output:nth-child(2):nth-last-child(1) {
    top: 70% !important;
}

/* Three ports - more spread */
.drawflow .drawflow-node .input:nth-child(1):nth-last-child(3) {
    top: 20% !important;
}

.drawflow .drawflow-node .input:nth-child(2):nth-last-child(2) {
    top: 50% !important;
}

.drawflow .drawflow-node .input:nth-child(3):nth-last-child(1) {
    top: 80% !important;
}

.drawflow .drawflow-node .output:nth-child(1):nth-last-child(3) {
    top: 20% !important;
}

.drawflow .drawflow-node .output:nth-child(2):nth-last-child(2) {
    top: 50% !important;
}

.drawflow .drawflow-node .output:nth-child(3):nth-last-child(1) {
    top: 80% !important;
}

/* Four or more ports - full spread */
.drawflow .drawflow-node .input:nth-child(1):nth-last-child(n+4) {
    top: 10% !important;
}

.drawflow .drawflow-node .input:nth-child(2):nth-last-child(n+3) {
    top: 30% !important;
}

.drawflow .drawflow-node .input:nth-child(3):nth-last-child(n+2) {
    top: 70% !important;
}

.drawflow .drawflow-node .input:nth-child(4):nth-last-child(n+1) {
    top: 90% !important;
}

.drawflow .drawflow-node .output:nth-child(1):nth-last-child(n+4) {
    top: 10% !important;
}

.drawflow .drawflow-node .output:nth-child(2):nth-last-child(n+3) {
    top: 30% !important;
}

.drawflow .drawflow-node .output:nth-child(3):nth-last-child(n+2) {
    top: 70% !important;
}

.drawflow .drawflow-node .output:nth-child(4):nth-last-child(n+1) {
    top: 90% !important;
}

/* ✅ OPERATION NODES ONLY - Smart port alignment with more spacing */
/* Operation nodes: Single port - centered */
.drawflow .operation-node .input:nth-child(1):last-child {
    top: 50% !important;
    left: -18px !important;
}

.drawflow .operation-node .output:nth-child(1):last-child {
    top: 50% !important;
    right: -18px !important;
}

/* Operation nodes: Two ports - more space around center */
.drawflow .operation-node .input:nth-child(1):nth-last-child(2) {
    top: 25% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(2):nth-last-child(1) {
    top: 75% !important;
    left: -18px !important;
}

.drawflow .operation-node .output:nth-child(1):nth-last-child(2) {
    top: 25% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(2):nth-last-child(1) {
    top: 75% !important;
    right: -18px !important;
}

/* Operation nodes: Three ports - more spread */
.drawflow .operation-node .input:nth-child(1):nth-last-child(3) {
    top: 15% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(2):nth-last-child(2) {
    top: 50% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(3):nth-last-child(1) {
    top: 85% !important;
    left: -18px !important;
}

.drawflow .operation-node .output:nth-child(1):nth-last-child(3) {
    top: 15% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(2):nth-last-child(2) {
    top: 50% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(3):nth-last-child(1) {
    top: 85% !important;
    right: -18px !important;
}

/* Operation nodes: Four or more ports - maximum spread */
.drawflow .operation-node .input:nth-child(1):nth-last-child(n+4) {
    top: 5% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(2):nth-last-child(n+3) {
    top: 25% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(3):nth-last-child(n+2) {
    top: 75% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(4):nth-last-child(n+1) {
    top: 95% !important;
    left: -18px !important;
}

.drawflow .operation-node .input:nth-child(5) {
    top: 50% !important;
    left: -18px !important;
}

.drawflow .operation-node .output:nth-child(1):nth-last-child(n+4) {
    top: 5% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(2):nth-last-child(n+3) {
    top: 25% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(3):nth-last-child(n+2) {
    top: 75% !important;
    right: -18px !important;
}

.drawflow .operation-node .output:nth-child(4):nth-last-child(n+1) {
    top: 95% !important;
    right: -18px !important;
}

/* ✅ PORT HOVER EFFECTS - More visible when outside */
.drawflow .drawflow-node .input:hover,
.drawflow .drawflow-node .output:hover {
    transform: translateY(-50%) scale(1.2) !important;
    box-shadow: 0 0 8px rgba(0,0,0,0.4) !important;
    z-index: 1001 !important;
}

/* ✅ PORT ACTIVE/CONNECTING STATE */
.drawflow .drawflow-node .input.connecting,
.drawflow .drawflow-node .output.connecting {
    transform: translateY(-50%) scale(1.3) !important;
    box-shadow: 0 0 12px rgba(165, 78, 225, 0.6) !important;
    border-color: #A54EE1 !important;
}

/* ✅ ENSURE PORTS ARE ALWAYS VISIBLE ABOVE CONNECTIONS */
.drawflow .drawflow-node .input,
.drawflow .drawflow-node .output {
    z-index: 1000 !important;
}

/* ✅ CONNECTION LINES DON'T INTERFERE WITH PORTS */
.drawflow svg {
    z-index: 0 !important;
}

.drawflow .connection {
    z-index: 1 !important;
}

/* ====================================== */
/* OPERATION NODE COLORS */
/* ====================================== */

/* Arithmetic Operations */
.drawflow .operation-add {
    background: linear-gradient(135deg, #28a745 0%, #20c997 100%) !important;
    border: 2px solid #1e7e34 !important;
    box-shadow: 0 2px 8px rgba(40, 167, 69, 0.3) !important;
}

.drawflow .operation-subtract {
    background: linear-gradient(135deg, #ffc107 0%, #ffda6a 100%) !important;
    border: 2px solid #d39e00 !important;
    box-shadow: 0 2px 8px rgba(255, 193, 7, 0.3) !important;
}

.drawflow .operation-multiply {
    background: linear-gradient(135deg, #17a2b8 0%, #5bc0de 100%) !important;
    border: 2px solid #138496 !important;
    box-shadow: 0 2px 8px rgba(23, 162, 184, 0.3) !important;
}

.drawflow .operation-divide {
    background: linear-gradient(135deg, #dc3545 0%, #f86c7b 100%) !important;
    border: 2px solid #bd2130 !important;
    box-shadow: 0 2px 8px rgba(220, 53, 69, 0.3) !important;
}

/* Comparison Operations */
.drawflow .operation-greater,
.drawflow .operation-less,
.drawflow .operation-greaterEqual,
.drawflow .operation-lessEqual {
    background: linear-gradient(135deg, #A54EE1 0%, #c78ce6 100%) !important;
    border: 2px solid #8e3bb7 !important;
    box-shadow: 0 2px 8px rgba(165, 78, 225, 0.4) !important;
}

.drawflow .operation-equals,
.drawflow .operation-notEqual {
    background: linear-gradient(135deg, #4F008C 0%, #7a4db3 100%) !important;
    border: 2px solid #3d0069 !important;
    box-shadow: 0 2px 8px rgba(79, 0, 140, 0.4) !important;
}

/* Mathematical Functions */
.drawflow .operation-abs,
.drawflow .operation-sqrt {
    background: linear-gradient(135deg, #00C48C 0%, #4dd4ac 100%) !important;
    border: 2px solid #00a16f !important;
    box-shadow: 0 2px 8px rgba(0, 196, 140, 0.3) !important;
}

.drawflow .operation-round,
.drawflow .operation-floor,
.drawflow .operation-ceil {
    background: linear-gradient(135deg, #1BCED8 0%, #5dd9e5 100%) !important;
    border: 2px solid #17a2b8 !important;
    box-shadow: 0 2px 8px rgba(27, 206, 216, 0.3) !important;
}

.drawflow .operation-min,
.drawflow .operation-max,
.drawflow .operation-power {
    background: linear-gradient(135deg, #EF7945 0%, #f2966e 100%) !important;
    border: 2px solid #cc5500 !important;
    box-shadow: 0 2px 8px rgba(239, 121, 69, 0.3) !important;
}

/* Logical Operations */
.drawflow .operation-and,
.drawflow .operation-or {
    background: linear-gradient(135deg, #6c757d 0%, #8d979e 100%) !important;
    border: 2px solid #495057 !important;
    box-shadow: 0 2px 8px rgba(108, 117, 125, 0.3) !important;
}

.drawflow .operation-not {
    background: linear-gradient(135deg, #495057 0%, #6c757d 100%) !important;
    border: 2px solid #343a40 !important;
    box-shadow: 0 2px 8px rgba(73, 80, 87, 0.3) !important;
}

/* Conditional Operations */
.drawflow .drawflow-node.operation-if {
    background: linear-gradient(135deg, #FF375E 0%, #ff6b8a 100%) !important;
    border: 2px solid #e6003d !important;
    box-shadow: 0 2px 8px rgba(255, 55, 94, 0.4) !important;
}

/* Text size adjustments for specific operations */
.drawflow .operation-not .drawflow_content_node,
.drawflow .operation-or .drawflow_content_node,
.drawflow .operation-and .drawflow_content_node,
.drawflow .operation-min .drawflow_content_node,
.drawflow .operation-max .drawflow_content_node,
.drawflow .operation-round .drawflow_content_node,
.drawflow .operation-if .drawflow_content_node {
    font-size: 1.7rem !important;
}

.drawflow .operation-abs .drawflow_content_node {
    font-size: 1.9rem !important;
}

/* ✅ LONG TEXT HANDLING */
.drawflow .drawflow-node[data-long-text="true"] {
    white-space: normal !important;
    word-wrap: break-word !important;
    max-width: 250px !important;
    text-align: left !important;
    padding: 15px 20px !important;
}

/* ====================================== */
/* OPERATION TOOLTIPS */
/* ====================================== */

.simple-tooltip {
    position: fixed;
    z-index: 9999;
    background: rgba(255, 248, 220, 0.7);
    color: #333333;
    border: 1px solid rgba(218, 218, 180, 0.8);
    border-radius: 0;
    box-shadow: 3px 3px 8px rgba(0, 0, 0, 0.2), inset 0 0 0 1px rgba(255, 255, 255, 0.2);
    max-width: none;
    min-width: 300px;
    width: max-content;
    max-width: min(500px, calc(100vw - 40px));
    font-size: 13px;
    line-height: 1.4;
    pointer-events: none;
    font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
    backdrop-filter: blur(2px);
}


    .simple-tooltip .op-symbol {
        font-size: 16px;
        font-weight: bold;
        min-width: 20px;
        text-align: center;
        text-shadow: 1px 1px 1px rgba(0, 0, 0, 0.1);
    }

    .simple-tooltip .tooltip-body {
        padding: 12px;
        background: rgba(255, 248, 220, 0.7);
    }

        /* Add title styling inside the body */
        .simple-tooltip .tooltip-body .op-title {
            display: flex;
            align-items: center;
            gap: 6px;
            margin-bottom: 8px;
            font-weight: bold;
            color: #333;
        }

        .simple-tooltip .tooltip-body .op-symbol {
            font-size: 14px;
            font-weight: bold;
            min-width: 18px;
            text-align: center;
        }

    .simple-tooltip .description {
        margin-bottom: 8px;
        color: #444444;
        font-weight: 500;
    }

    .simple-tooltip .input-row {
        margin: 4px 0;
        font-size: 12px;
        color: #555555;
    }

    .simple-tooltip .input-label {
        color: #8B4513;
        font-weight: 600;
    }

    .simple-tooltip .example {
        margin: 8px 0;
        color: #006400;
        font-size: 12px;
        font-weight: 500;
    }

        .simple-tooltip .example code {
            background: rgba(255, 255, 255, 0.5);
            color: #006400;
            padding: 2px 4px;
            border-radius: 2px;
            font-family: 'Consolas', 'Courier New', monospace;
            font-size: 11px;
            border: 1px solid rgba(221, 221, 221, 0.6);
        }

    .simple-tooltip .diagram {
        margin-top: 8px;
        padding-top: 8px;
        border-top: 1px solid rgba(218, 218, 180, 0.6);
        text-align: center;
        background: rgba(255, 255, 255, 0.2);
        border-radius: 3px;
        overflow: visible;
        min-height: 70px;
        padding: 8px;
    }

        .simple-tooltip .diagram svg {
            max-width: none;
            width: auto;
            height: auto;
            background: rgba(255, 255, 255, 0.6);
            border-radius: 2px;
            padding: 8px;
            border: 1px solid rgba(221, 221, 221, 0.5);
            max-width: 200px;
            max-height: 100px;
        }

/* ====================================== */
/* BUTTON & CONTROL STYLES */
/* ====================================== */

.constant-controls button,
.output-controls button {
    pointer-events: all !important;
    z-index: 10;
    position: relative;
}

.constant-controls,
.output-controls {
    pointer-events: all !important;
}

.constant-item.dragging .constant-controls {
    pointer-events: none;
}

/* Badge colors */
.badge.bg-success {
    background-color: #00C48C !important;
}

.badge.bg-warning {
    background-color: #FFE923 !important;
    color: #000 !important;
}


/* ====================================== */
/* OPERATION NODE PORT LABELS (A, B, ?, T, F) */
/* ====================================== */

/* ✅ ALWAYS VISIBLE LABELS FOR CRITICAL OPERATIONS */
.drawflow .operation-node.operation-divide .input:nth-child(1)::before,
.drawflow .operation-node.operation-subtract .input:nth-child(1)::before,
.drawflow .operation-node.operation-power .input:nth-child(1)::before {
    content: "A";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

.drawflow .operation-node.operation-divide .input:nth-child(2)::before,
.drawflow .operation-node.operation-subtract .input:nth-child(2)::before,
.drawflow .operation-node.operation-power .input:nth-child(2)::before {
    content: "B";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

/* ✅ COMPARISON OPERATIONS LABELS */
.drawflow .operation-node.operation-greater .input:nth-child(1)::before,
.drawflow .operation-node.operation-less .input:nth-child(1)::before,
.drawflow .operation-node.operation-greaterEqual .input:nth-child(1)::before,
.drawflow .operation-node.operation-lessEqual .input:nth-child(1)::before {
    content: "A";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

.drawflow .operation-node.operation-greater .input:nth-child(2)::before,
.drawflow .operation-node.operation-less .input:nth-child(2)::before,
.drawflow .operation-node.operation-greaterEqual .input:nth-child(2)::before,
.drawflow .operation-node.operation-lessEqual .input:nth-child(2)::before {
    content: "B";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

/* ✅ IF OPERATION SPECIAL LABELS (condition, true_value, false_value) */
.drawflow .operation-node.operation-if .input:nth-child(1)::before {
    content: "?";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

.drawflow .operation-node.operation-if .input:nth-child(2)::before {
    content: "T";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

.drawflow .operation-node.operation-if .input:nth-child(3)::before {
    content: "F";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg);
    padding: 2px;
}

padding: 2px;
}

/* ✅ COMPARISON OPERATIONS LABELS */
.drawflow .operation-node.operation-greater .input:nth-child(1)::before,
.drawflow .operation-node.operation-less .input:nth-child(1)::before,
.drawflow .operation-node.operation-greaterEqual .input:nth-child(1)::before,
.drawflow .operation-node.operation-lessEqual .input:nth-child(1)::before {
    content: "A";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

.drawflow .operation-node.operation-greater .input:nth-child(2)::before,
.drawflow .operation-node.operation-less .input:nth-child(2)::before,
.drawflow .operation-node.operation-greaterEqual .input:nth-child(2)::before,
.drawflow .operation-node.operation-lessEqual .input:nth-child(2)::before {
    content: "B";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

/* ✅ IF OPERATION SPECIAL LABELS (condition, true_value, false_value) */
.drawflow .operation-node.operation-if .input:nth-child(1)::before {
    content: "?";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

.drawflow .operation-node.operation-if .input:nth-child(2)::before {
    content: "T";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

.drawflow .operation-node.operation-if .input:nth-child(3)::before {
    content: "F";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

/* ✅ PORT HOVER EFFECTS FOR LABELS ONLY - No black indicators */
.drawflow .operation-node .input:hover::before {
    transform: rotate(-45deg) scale(1.1);
    text-shadow: -2px -2px 0 #fff, 2px -2px 0 #fff, -2px 2px 0 #fff, 2px 2px 0 #fff, 0 0 6px rgba(255,255,255,1);
}

/* ✅ PORT LABEL COLORS BY OPERATION TYPE */
.drawflow .operation-node.operation-min .input:nth-child(1)::before,
.drawflow .operation-node.operation-max .input:nth-child(1)::before {
    content: "A";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

.drawflow .operation-node.operation-min .input:nth-child(2)::before,
.drawflow .operation-node.operation-max .input:nth-child(2)::before {
    content: "B";
    position: absolute;
    left: -15px;
    top: -15px;
    width: auto;
    height: auto;
    background: none;
    color: #000;
    font-size: 12px;
    font-weight: 900;
    display: flex;
    align-items: center;
    justify-content: center;
    z-index: 1002;
    font-family: 'STC Forward', sans-serif;
    text-shadow: -1px -1px 0 #fff, 1px -1px 0 #fff, -1px 1px 0 #fff, 1px 1px 0 #fff, 0 0 3px rgba(255,255,255,0.8);
    transform: rotate(-45deg); /* Opposite rotation to counter the node rotation */
    padding: 2px;
}

/* ====================================== */
/* ORPHAN NODE STYLING */
/* ====================================== */

/* ✅ Orphan node (deleted field) styling */
.drawflow .drawflow-node.orphan-node {
    border: 2px dashed #dc3545 !important;
    opacity: 0.7 !important;
    animation: orphan-pulse 2s infinite;
}

    .drawflow .drawflow-node.orphan-node .drawflow_content_node {
        background-color: #ff6b6b !important;
        color: white !important;
        opacity: 0.8 !important;
    }

/* ✅ Orphan pulse animation */
@keyframes orphan-pulse {
    0%, 100% {
        box-shadow: 0 0 0 0 rgba(220, 53, 69, 0.4);
    }

    50% {
        box-shadow: 0 0 0 8px rgba(220, 53, 69, 0.1);
    }
}

/* ✅ Orphan indicator styling */
.orphan-indicator {
    position: absolute !important;
    top: -5px !important;
    right: -5px !important;
    background: #dc3545 !important;
    color: white !important;
    border-radius: 50% !important;
    width: 16px !important;
    height: 16px !important;
    font-size: 10px !important;
    display: flex !important;
    align-items: center !important;
    justify-content: center !important;
    font-weight: bold !important;
    z-index: 1001 !important;
    animation: bounce 1s infinite;
}

@keyframes bounce {
    0%, 20%, 50%, 80%, 100% {
        transform: translateY(0);
    }

    40% {
        transform: translateY(-3px);
    }

    60% {
        transform: translateY(-2px);
    }
}